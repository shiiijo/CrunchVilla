System design tips

1. talk about web app bundling and why it is necessary and explain why it makes web app fast
and explain about lazy loading

2. ask which type of styling to use for the components. if your choosing anything above another, tell pros and cons of rejected styling methods
different ways to add css:
a. native css
b. inline css
c. sass / scss 
d. styled css (majorly used in react) - it is like jsx for css or writing css inside javscript
https://styled-components.com/ & https://styled-components.com/docs/basics
e. frameworks such as material UI , bootstrap , tailwind , chakra UI etc ..

3.



Tailwind Css
- Css on the go (in the same files)
- reusability
- less bundle size(makes app faster)
- flexible UI (we can customize acc to our need) - it is not allowed in material UI

- tailwind css is library is installed with one more library it is postCss
- postCss converts class names of tailwind css to normal css which is unnderstandable by browser
- 'npx tailwindCss init' command will initialize our project to use tailwindCss
- above will create config file , in which we need to do tail wind configuration
- uses of tailwind
 - no duplication of css
 - easy to debug
 - code is less and easy to use
 - bundle size is small

- cons
 - it needs a decent learning before using
 - code grows horizontally because of many class names and reduces readbility


 Web app consits of two layers 
 - UI layer 
 - data layers
 we recieve data from external world(via api calls) , that data within the application are maintained by state mangment and props

 Props Drilling:
  - passing data as props from upper componenets to childern componenet and so on to grand child in heirarchy and this whole chain is called as PD

  props drilling is not recommended , if we are sharing data across more components, alternative to this we will use
  context and redux store which makes data availability for all the componenets exists inside our app and data is maintained centrally
  example is user info

  1. context 
  to achive this there are many libraries but react has its official library 